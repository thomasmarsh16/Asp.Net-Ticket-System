@model aspNetCoreTicketSystem.Models.ProjectTask


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="card shadow mb-4">
        <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
            <h6 class="m-0 font-weight-bold text-primary"> Edit @Model.taskName </h6>
        </div>

        <div class="card-body">
            <div class="form-horizontal">
                <div class="form-group">
                    <div class="col-md-10">
                        <label>Task Name</label>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.taskName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.taskName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <label>Importance</label>
                        <select class="selectpicker" id="Importance" name="Importance">

                            @if (Model.Importance == "Low")
                            {
                                <option value="Low" selected>Low</option>
                                <option value="Medium">Medium</option>
                                <option value="High">High</option>
                            }
                            else if (Model.Importance == "Medium")
                            {
                                <option value="Low">Low</option>
                                <option value="Medium" selected>Medium</option>
                                <option value="High">High</option>
                            }
                            else if (Model.Importance == "High")
                            {
                                <option value="Low">Low</option>
                                <option value="Medium">Medium</option>
                                <option value="High" selected>High</option>
                            }


                        </select>
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Completed, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        <div class="checkbox">
                            @Html.EditorFor(model => model.Completed)
                            @Html.ValidationMessageFor(model => model.Completed, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <label>Start Date</label>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-10">
                        <label>Due Date</label>
                        <div class="checkbox">
                            @Html.EditorFor(model => model.dueDate, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.dueDate, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <hr />

            </div>

        </div>

        <div class="card-footer">
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Edit" class="btn btn-danger" /> |
                    @Html.ActionLink("Back to List", "Index", new { id = Model.ProjectID })
                </div>
            </div>
        </div>
    </div>

    <div class="form-group invisible">
        @Html.EditorFor(model => model.ProjectID, new { htmlAttributes = new { @class = "form-control" } })
        @Html.EditorFor(model => model.taskWorkers, new { htmlAttributes = new { @class = "form-control" } })
    </div>
}

<script src="~/bundles/jqueryval"></script>